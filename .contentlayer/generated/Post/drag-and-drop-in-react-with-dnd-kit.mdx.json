{
  "title": "Drag & drop in React with Dnd Kit",
  "description": "A simple guide to get started with Dnd Kit in React.",
  "tags": [
    "React",
    "Typescript",
    "Tutorial"
  ],
  "ogImage": "/assets/blog/dynamic-routing/cover.jpg",
  "thumbnail": "/assets/blog/dynamic-routing/cover.jpg",
  "postId": "drag-and-drop-in-react-with-dnd-kit",
  "body": {
    "raw": "\nDnD Kit is an awesome library I recently discovered while working on the new dashboard for [Super](https://super.so/). It makes the complex task of creating performant Drag-and-Drop UI interactions easier, with some interesting patterns and concepts. I spent some time creating a lot of cool interactions with the library and wanted to share some of the things I learned.\n\nLets get started\n\n## Core Concepts\n\nIn most drag-and-drop UI interactions, there are typically two components:\n\n- **Draggable components** which are elements on a page that we can pick up, drag and drop in specified areas; and\n- **Droppable components**, , which are elements that act as the 'specified areas' that draggable elements can be dropped over.\n\nYou can see these components in action by playing around in the demo below:\n\n<DraggableAndDroppable />\n\nDndKit embraces this concept and provides two essential hooks for our applications: the `useDraggable` hook, which makes a component draggable, and the `useDroppable` hook, which makes a component droppable. To manage the interactions between these components, DndKit also provides us with a`<DndContext>`component. This component makes use of the React Context API to share data between draggable and droppable components. Therefore, we must ensure that our draggable and droppable components are nested within the` <DndContext>`.\n\n```tsx:App.tsx\nimport React from 'react';\nimport { DndContext } from '@dnd-kit/core';\nimport { Draggable } from './Draggable';\nimport { Droppable } from './Droppable';\n\nfunction App() {\n  return (\n    <DndContext>\n      <Draggable />\n      <Droppable />\n    </DndContext>\n  );\n}\n```\n\n### Draggables\n\nTo make a component draggable, we will use the useDraggable hook, exported from the @dnd-kit/core package. Install it via npm or yarn:\n\n```\nnpm install @dnd-kit/core\n```\n\nThis hook takes a unique id as an argument and returns an object with several properties. The properties we are interested in right now are:\n\n1. `setNodeRef` - a ref we attach to the HTML element we want to make draggable.\n2. `listeners` and `attributes` - objects we spread on the HTML element to listen for drag events.\n3. `transform` - an object with the x- and y-coordinates of a draggable element in 2D. We'll use this to update the `translate` property, allowing us to move the draggable component on the screen.\n\nHere's an example of how all these elements come together:\n\n```tsx:Draggable.tsx\nfunction Draggable(props: DraggableProps) {\n  const { attributes, listeners, setNodeRef, transform } = useDraggable({\n    id: props.id,\n  });\n\n  return (\n    <button\n      ref={setNodeRef}\n      style={{\n        transform: CSS.Transform.toString(transform),\n      }}\n      {...listeners}\n      {...attributes}\n    >\n      Draggable\n    </button>\n  );\n}\n```\n\nNow that we have a draggable component, we need to decide what to do with it. One thing we can do is update its position as we drag it. This would allow us to move the component across the screen, like in canvas-based applications such as Figma and Excalidraw. To do this, we'll store the component's data, including its x- and y-positions, in state. We'll also leverage the onDragEnd event emitted by the `<DndContext />`. This function fires after a draggable item is dropped, and the event object passed to it contains data about the component. We can use this data to update the component's position in state.\n\nAnother thing we can do with a draggable component is drag it into a specified areas we define called droppable components, lets build that below:\n\n### Droppables\n\nWe will use the useDroppable hook, exported from the @dnd-kit/core package, to make our component droppable. This hook takes a unique id as an argument and returns an object with several properties. We are interested in the following:\n\n1. `setNodeRef` - a ref we attach to the HTML element we want to make droppable.\n2. `isOver` - a Boolean that is `true` if a droppable component is over the droppable component.\n\nHere's an example of how all these elements come together:\n\n```tsx:Droppable.tsx\nfunction Droppable(props: DroppableProps) {\n  const { setNodeRef, isOver } = useDroppable({\n    id: props.id,\n  });\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={{\n        backgroundColor: isOver ? \"lightblue\" : \"white\",\n      }}\n    >\n      Droppable\n    </div>\n  );\n}\n```\n\nTo combine our draggable and droppable components, we need an array of IDs of our droppable containers and a piece of state to track which droppable component our draggable component is over. We'll use the `onDragEnd` function to check if a draggable component is over a particular droppable component. If it is, we'll update the state and add the draggable component as a child of the droppable container in the UI:\n",
    "code": "var Component=(()=>{var d=Object.create;var t=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,N=Object.prototype.hasOwnProperty;var k=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),g=(a,e)=>{for(var s in e)t(a,s,{get:e[s],enumerable:!0})},o=(a,e,s,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of m(e))!N.call(a,c)&&c!==s&&t(a,c,{get:()=>e[c],enumerable:!(l=h(e,c))||l.enumerable});return a};var b=(a,e,s)=>(s=a!=null?d(u(a)):{},o(e||!a||!a.__esModule?t(s,\"default\",{value:a,enumerable:!0}):s,a)),w=a=>o(t({},\"__esModule\",{value:!0}),a);var r=k((T,i)=>{i.exports=_jsx_runtime});var v={};g(v,{default:()=>D,frontmatter:()=>f});var n=b(r()),f={title:\"Drag & drop in React with Dnd Kit\",publishedAt:\"2022-12-18\",description:\"A simple guide to get started with Dnd Kit in React.\",tags:[\"React\",\"Typescript\",\"Tutorial\"],ogImage:\"/assets/blog/dynamic-routing/cover.jpg\",thumbnail:\"/assets/blog/dynamic-routing/cover.jpg\",postId:\"drag-and-drop-in-react-with-dnd-kit\"};function p(a){let e=Object.assign({p:\"p\",a:\"a\",h2:\"h2\",span:\"span\",ul:\"ul\",li:\"li\",strong:\"strong\",code:\"code\",div:\"div\",pre:\"pre\",h3:\"h3\",ol:\"ol\"},a.components),{DraggableAndDroppable:s}=e;return s||x(\"DraggableAndDroppable\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"DnD Kit is an awesome library I recently discovered while working on the new dashboard for \",(0,n.jsx)(e.a,{href:\"https://super.so/\",children:\"Super\"}),\". It makes the complex task of creating performant Drag-and-Drop UI interactions easier, with some interesting patterns and concepts. I spent some time creating a lot of cool interactions with the library and wanted to share some of the things I learned.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Lets get started\"}),`\n`,(0,n.jsxs)(e.h2,{id:\"core-concepts\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#core-concepts\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Core Concepts\"]}),`\n`,(0,n.jsx)(e.p,{children:\"In most drag-and-drop UI interactions, there are typically two components:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Draggable components\"}),\" which are elements on a page that we can pick up, drag and drop in specified areas; and\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Droppable components\"}),\", , which are elements that act as the 'specified areas' that draggable elements can be dropped over.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"You can see these components in action by playing around in the demo below:\"}),`\n`,(0,n.jsx)(s,{}),`\n`,(0,n.jsxs)(e.p,{children:[\"DndKit embraces this concept and provides two essential hooks for our applications: the \",(0,n.jsx)(e.code,{children:\"useDraggable\"}),\" hook, which makes a component draggable, and the \",(0,n.jsx)(e.code,{children:\"useDroppable\"}),\" hook, which makes a component droppable. To manage the interactions between these components, DndKit also provides us with a\",(0,n.jsx)(e.code,{children:\"<DndContext>\"}),\"component. This component makes use of the React Context API to share data between draggable and droppable components. Therefore, we must ensure that our draggable and droppable components are nested within the\",(0,n.jsx)(e.code,{children:\" <DndContext>\"}),\".\"]}),`\n`,(0,n.jsx)(e.div,{className:\"rehype-code-title\",children:\"App.tsx\"}),(0,n.jsx)(e.pre,{className:\"language-tsx\",children:(0,n.jsxs)(e.code,{className:\"language-tsx code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"import\"}),\" \",(0,n.jsx)(e.span,{className:\"token imports\",children:(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"React\"})}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'react'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"import\"}),\" \",(0,n.jsxs)(e.span,{className:\"token imports\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"DndContext\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'@dnd-kit/core'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"import\"}),\" \",(0,n.jsxs)(e.span,{className:\"token imports\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"Draggable\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'./Draggable'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"import\"}),\" \",(0,n.jsxs)(e.span,{className:\"token imports\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"Droppable\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'./Droppable'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"function\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"App\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token class-name\",children:\"DndContext\"})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),(0,n.jsx)(e.span,{className:\"token plain-text\",children:`\n`})]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token plain-text\",children:\"      \"}),(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Draggable\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"/>\"})]}),(0,n.jsx)(e.span,{className:\"token plain-text\",children:`\n`})]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token plain-text\",children:\"      \"}),(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Droppable\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"/>\"})]}),(0,n.jsx)(e.span,{className:\"token plain-text\",children:`\n`})]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token plain-text\",children:\"    \"}),(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"</\"}),(0,n.jsx)(e.span,{className:\"token class-name\",children:\"DndContext\"})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.h3,{id:\"draggables\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#draggables\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Draggables\"]}),`\n`,(0,n.jsx)(e.p,{children:\"To make a component draggable, we will use the useDraggable hook, exported from the @dnd-kit/core package. Install it via npm or yarn:\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"code-highlight\",children:(0,n.jsx)(e.span,{className:\"code-line\",children:`npm install @dnd-kit/core\n`})})}),`\n`,(0,n.jsx)(e.p,{children:\"This hook takes a unique id as an argument and returns an object with several properties. The properties we are interested in right now are:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"setNodeRef\"}),\" - a ref we attach to the HTML element we want to make draggable.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"listeners\"}),\" and \",(0,n.jsx)(e.code,{children:\"attributes\"}),\" - objects we spread on the HTML element to listen for drag events.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"transform\"}),\" - an object with the x- and y-coordinates of a draggable element in 2D. We'll use this to update the \",(0,n.jsx)(e.code,{children:\"translate\"}),\" property, allowing us to move the draggable component on the screen.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"Here's an example of how all these elements come together:\"}),`\n`,(0,n.jsx)(e.div,{className:\"rehype-code-title\",children:\"Draggable.tsx\"}),(0,n.jsx)(e.pre,{className:\"language-tsx\",children:(0,n.jsxs)(e.code,{className:\"language-tsx code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"function\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"Draggable\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"props\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"DraggableProps\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" attributes\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" listeners\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" setNodeRef\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" transform \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"useDraggable\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    id\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" props\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token property-access\",children:\"id\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),\"button\"]}),`\n`]})]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token tag\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token attr-name\",children:\"ref\"}),(0,n.jsxs)(e.span,{className:\"token script language-javascript\",children:[(0,n.jsx)(e.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"setNodeRef\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),`\n`]})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token tag\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token attr-name\",children:\"style\"}),(0,n.jsxs)(e.span,{className:\"token script language-javascript\",children:[(0,n.jsx)(e.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]})]})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token tag\",children:(0,n.jsxs)(e.span,{className:\"token script language-javascript\",children:[\"        transform\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"CSS\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token property-access\",children:(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"Transform\"})}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token method function property-access\",children:\"toString\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"transform\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token script language-javascript\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),`\n`]})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token tag\",children:[\"      \",(0,n.jsxs)(e.span,{className:\"token spread\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token spread operator\",children:\"...\"}),\"listeners\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),`\n`]})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token tag\",children:[\"      \",(0,n.jsxs)(e.span,{className:\"token spread\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token spread operator\",children:\"...\"}),\"attributes\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),`\n`]})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),(0,n.jsx)(e.span,{className:\"token plain-text\",children:`\n`})]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token plain-text\",children:`      Draggable\n`})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token plain-text\",children:\"    \"}),(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"</\"}),\"button\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Now that we have a draggable component, we need to decide what to do with it. One thing we can do is update its position as we drag it. This would allow us to move the component across the screen, like in canvas-based applications such as Figma and Excalidraw. To do this, we'll store the component's data, including its x- and y-positions, in state. We'll also leverage the onDragEnd event emitted by the \",(0,n.jsx)(e.code,{children:\"<DndContext />\"}),\". This function fires after a draggable item is dropped, and the event object passed to it contains data about the component. We can use this data to update the component's position in state.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Another thing we can do with a draggable component is drag it into a specified areas we define called droppable components, lets build that below:\"}),`\n`,(0,n.jsxs)(e.h3,{id:\"droppables\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#droppables\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Droppables\"]}),`\n`,(0,n.jsx)(e.p,{children:\"We will use the useDroppable hook, exported from the @dnd-kit/core package, to make our component droppable. This hook takes a unique id as an argument and returns an object with several properties. We are interested in the following:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"setNodeRef\"}),\" - a ref we attach to the HTML element we want to make droppable.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"isOver\"}),\" - a Boolean that is \",(0,n.jsx)(e.code,{children:\"true\"}),\" if a droppable component is over the droppable component.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"Here's an example of how all these elements come together:\"}),`\n`,(0,n.jsx)(e.div,{className:\"rehype-code-title\",children:\"Droppable.tsx\"}),(0,n.jsx)(e.pre,{className:\"language-tsx\",children:(0,n.jsxs)(e.code,{className:\"language-tsx code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"function\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"Droppable\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"props\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"DroppableProps\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" setNodeRef\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" isOver \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"useDroppable\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    id\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" props\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token property-access\",children:\"id\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),\"div\"]}),`\n`]})]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token tag\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token attr-name\",children:\"ref\"}),(0,n.jsxs)(e.span,{className:\"token script language-javascript\",children:[(0,n.jsx)(e.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"setNodeRef\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),`\n`]})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token tag\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token attr-name\",children:\"style\"}),(0,n.jsxs)(e.span,{className:\"token script language-javascript\",children:[(0,n.jsx)(e.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]})]})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token tag\",children:(0,n.jsxs)(e.span,{className:\"token script language-javascript\",children:[\"        backgroundColor\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" isOver \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"?\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"lightblue\"'}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"white\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token script language-javascript\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),`\n`]})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),(0,n.jsx)(e.span,{className:\"token plain-text\",children:`\n`})]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token plain-text\",children:`      Droppable\n`})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token plain-text\",children:\"    \"}),(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"</\"}),\"div\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"To combine our draggable and droppable components, we need an array of IDs of our droppable containers and a piece of state to track which droppable component our draggable component is over. We'll use the \",(0,n.jsx)(e.code,{children:\"onDragEnd\"}),\" function to check if a draggable component is over a particular droppable component. If it is, we'll update the state and add the draggable component as a child of the droppable container in the UI:\"]})]})}function y(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,Object.assign({},a,{children:(0,n.jsx)(p,a)})):p(a)}var D=y;function x(a,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+a+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return w(v);})();\n;return Component;"
  },
  "_id": "drag-and-drop-in-react-with-dnd-kit.mdx",
  "_raw": {
    "sourceFilePath": "drag-and-drop-in-react-with-dnd-kit.mdx",
    "sourceFileName": "drag-and-drop-in-react-with-dnd-kit.mdx",
    "sourceFileDir": ".",
    "contentType": "mdx",
    "flattenedPath": "drag-and-drop-in-react-with-dnd-kit"
  },
  "type": "Post",
  "publishedAt": "2022-12-26T01:30:06.541Z",
  "lastUpdatedAt": "2022-12-26T01:30:06.541Z",
  "readingTime": {
    "text": "4 min read",
    "minutes": 3.63,
    "time": 217800,
    "words": 726
  },
  "headings": [
    {
      "id": "core-concepts",
      "content": "Core Concepts",
      "link": "#core-concepts",
      "level": 2
    },
    {
      "id": "draggables",
      "content": "Draggables",
      "link": "#draggables",
      "level": 3
    },
    {
      "id": "droppables",
      "content": "Droppables",
      "link": "#droppables",
      "level": 3
    }
  ],
  "slug": "drag-and-drop-in-react-with-dnd-kit"
}